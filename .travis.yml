before_install:
  - export CURB_VERSION=$(echo ${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH} | tr '/' '-')
  - export CURB_ENV=$(paste -s -d ' ' $([[ $CURB_VERSION == "develop" ]] && echo ".env.production" || echo ".env.development"))
  - nvm install 10.10.0
  - npm install
jobs:
  include:
    - stage: Build Web
      language: node_js
      cache: npm
      install:
        - npm install -g netlify-cli@next
      script:
        - eval "$CURB_ENV npm run web-build"
        - bash deploy-netlify.sh
    - stage: Build Android
      language: android
      jdk: oraclejdk8
      android:
        components:
          - tools
          - android-23
          - android-27
          - build-tools-27.0.3
      before_cache:
        - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      cache:
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
          - $HOME/.android/build-cache
      install:
        - npm install -g react-native-cli
      before_script:
        - echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
        - eval "$CURB_ENV react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res/"
      script:
        - cd android
        - ./gradlew -q -x bundleReleaseJsAndAssets assembleRelease
        - bash testfairy-uploader.sh app/build/outputs/apk/release/app-release.apk
    - stage: Build iOS
      language: objective-c
      os: osx
      osx_image: xcode10.1
      install:
        - npm install -g react-native-cli
      before_script:
        - sudo security unlock-keychain -u /Users/travis/Library/Keychains/login.keychain-db
      # - eval "$CURB_ENV react-native bundle --platform ios --dev false --entry-file index.js --bundle-output ios/curb/main.jsbundle --assets-dest ios/curb/assets/"
      script:
        - cd ios
        - xcodebuild -project curb.xcodeproj -scheme curb -configuration Release clean archive -archivePath curb.xarchive -allowProvisioningUpdates CODE_SIGN_IDENTITY="iPhone Developer" PROVISIONING_PROFILE="3b98a95c-d9ff-48d3-9e28-7ae777b3494b" DEVELOPMENT_TEAM="9478G9T3JY"
        - xcodebuild -exportArchive -archivePath curb.xcarchive -exportOptionsPlist exportOptions.plist -exportPath export
        - bash testfairy-uploader.sh export/curb.ipa
